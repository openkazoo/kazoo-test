version: 2.1

jobs:
  build:
    docker:
      - image: erlang:24.3.4.17  # Primary container
      - image: rabbitmq:3.12-management  # RabbitMQ service
      - image: couchdb:3  # CouchDB service
        environment:
          COUCHDB_USER: admin
          COUCHDB_PASSWORD: password
    working_directory: ~/project #
    steps:
      - checkout

      # Installs system dependencies from the first file.
      - run:
          name: Install System Dependencies (LibreOffice, etc.)
          command: |
            apt-get update && apt-get install -y \
              netcat \
              curl \
              libreoffice \
              fonts-dejavu \
              libtiff-tools \
              ghostscript \
              --no-install-recommends && \
            apt-get clean && rm -rf /var/lib/apt/lists/*
            
      # Installs Go from the second file.
      - run:
          name: Install Go
          command: |
            GO_VERSION=1.24.2
            curl -OL https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz
            tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
            echo 'export PATH=$PATH:/usr/local/go/bin' >> $BASH_ENV
            source $BASH_ENV

      # Waits for service containers to be ready.
      - run:
          name: Wait for CouchDB and RabbitMQ
          command: |
            echo "Waiting for CouchDB..."
            timeout=60
            until curl -s -u admin:password http://localhost:5984/; do
              ((timeout--)) || { echo "CouchDB not responding in time"; exit 1; }
              sleep 1
            done
            echo "CouchDB is up!"

            echo "Waiting for RabbitMQ..."
            timeout=60
            until nc -z localhost 5672; do
              ((timeout--)) || { echo "RabbitMQ not responding in time"; exit 1; }
              sleep 1
            done
            echo "RabbitMQ is up!"

      # Prepares the application configuration.
      - run:
          name: Prepare Config File
          command: |
            mkdir -p /etc/kazoo/core/
            cp ./config/config.ini.circleci /etc/kazoo/core/config.ini

      # Compiles the Erlang code.
      - run:
          name: Compile Code
          command: make compile

      # Runs the test suites.
      - run:
          name: Run Tests
          command: make test && make ct

workflows:
  version: 2
  build-and-test:
    jobs:
      - build