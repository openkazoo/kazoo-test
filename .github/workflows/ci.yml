name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:3.12-management
        ports:
          - 5672:5672
      couchdb:
        image: couchdb:3
        ports:
          - 5984:5984
        env:
          COUCHDB_USER: admin
          COUCHDB_PASSWORD: password

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Erlang/OTP
        uses: erlef/setup-beam@v1
        with:
          otp-version: '26'
          rebar3-version: '3.25.0'

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            netcat-traditional \
            curl \
            ghostscript \
            libreoffice \
            fonts-dejavu \
            libtiff-tools

      - name: Start CouchDB
        run: |
          echo "Waiting for CouchDB..."
          timeout=120
          until curl -s -f -o /dev/null -u admin:password http://localhost:5984/_up; do
            if [ $timeout -eq 0 ]; then
              echo "CouchDB not responding in time"
              # Dump logs for debugging
              docker logs ${{ job.services.couchdb.id }}
              exit 1
            fi
            timeout=$((timeout-1))
            sleep 1
          done
          echo "CouchDB is up and ready!"

      - name: Initialize CouchDB System Databases
        run: |
          echo "Creating system databases..."
          curl -s -u admin:password -X PUT http://localhost:5984/_users
          curl -s -u admin:password -X PUT http://localhost:5984/_replicator
          curl -s -u admin:password -X PUT http://localhost:5984/_global_changes
          echo "" # for a clean log
          echo "System databases created."

      - name: Start RabbitMQ
        run: |
          echo "Waiting for RabbitMQ..."
          timeout=60
          until nc -z localhost 5672; do
            if [ $timeout -eq 0 ]; then
              echo "RabbitMQ not responding in time"
              exit 1
            fi
            timeout=$((timeout-1))
            sleep 1
          done
          echo "RabbitMQ is up!"

      - name: Prepare Kazoo Config
        run: |
          sudo mkdir -p /etc/kazoo
          sudo cp ./config/config.ini.ci /etc/kazoo/config.ini

      - name: Make Scripts Executable
        run: chmod +x ./scripts/*

      - name: Compile Kazoo
        run: make compile

      - name: Run Tests
        run: make test && make ct

      - name: Upload test logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: _build/test/logs